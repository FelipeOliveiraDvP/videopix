server {
    listen 80;
    server_name videopix.pro www.videopix.pro;

    root /var/www/public;
    index index.php index.html;

    # Redirecionar HTTP para HTTPS
    return 301 https://$host$request_uri;
}

server {
    # Configuração para HTTPS local (com certificado autoassinado)
    listen 443 ssl;

    server_name videopix.pro www.videopix.pro;

    # Caso os certificados da Cloudflare não estejam disponíveis, use os autoassinados
    ssl_certificate /etc/nginx/ssl/videopix.pro.pem;
    ssl_certificate_key /etc/nginx/ssl/videopix.pro.key;
    # ssl_certificate /etc/nginx/ssl/localhost.pem;
    # ssl_certificate_key /etc/nginx/ssl/localhost.key;


    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384';

    root /var/www/public;
    index index.php index.html;

    charset utf-8;

    # Vite build assets
    location ^~ /build/ {
        root /var/www/public;
        access_log off;
        expires 1y;
        try_files $uri =404;
    }

    # Arquivos estáticos
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff2?)$ {
        access_log off;
        log_not_found off;
        expires 1y;
        add_header Cache-Control "public, max-age=31536000";
        try_files $uri =404;
    }

    # Fallback SPA ou Laravel
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    # PHP
    location ~ \.php$ {
        fastcgi_pass app:9000;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        include fastcgi_params;
    }

    # Segurança básica
    location ~ /\.(?!well-known).* {
        deny all;
    }

    # Cabeçalhos de segurança
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-Content-Type-Options "nosniff";
}
